name: Unit-Tests

on:
  push:
    branches:
      - '*'

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Pull the Docker image with PLACET
        run: docker pull drozzoff/ubuntu_placet:latest
      
      - name: Start the Docker container
        run: docker run -d --name unit_tests drozzoff/ubuntu_placet:latest tail -f /dev/null

      - name: Copy the Placetmachine module to the container
        run: docker cp . unit_tests:module_to_test/

      - name: Create a virtual environment
        run: docker exec unit_tests python3 -m venv /module_to_test/tvenv

      - name: Install package and coverage in container
        run: docker exec unit_tests bash -c "cd /module_to_test && source tvenv/bin/activate && pip3 install /module_to_test/. coverage"

      - name: Run tests with coverage in container
        run: docker exec unit_tests bash -c "cd /module_to_test && source tvenv/bin/activate && coverage run --debug=data -m unittest discover -s tests"

      - name: Generate coverage report in container
        run: docker exec unit_tests bash -c "cd /module_to_test && source tvenv/bin/activate && coverage report"

      - name: Generate HTML coverage report in container
        run: docker exec unit_tests bash -c "cd /module_to_test && source tvenv/bin/activate && coverage html"

      - name: List htmlcov directory contents for debugging
        run: docker exec unit_tests bash -c "ls -la /module_to_test/htmlcov"  

      - name: Copy .coverage file to host
        run: docker cp unit_tests:/module_to_test/.coverage ./.coverage

      - name: Adjust paths in .coverage file
        run: |
          coverage combine --append --rcfile <(echo '[run]\ndata_file = .coverage\n[paths]\nsource =\n    /module_to_test/placetmachine\n    placetmachine')

      - name: Verify .coverage file content
        run: |
          echo "Verifying .coverage file content"
          python3 -c "import sqlite3; conn = sqlite3.connect('.coverage'); cursor = conn.cursor(); cursor.execute('SELECT * FROM meta'); rows = cursor.fetchall(); print(rows); cursor.execute('SELECT * FROM line_bits'); rows = cursor.fetchall(); print(rows);"

      - name: Copy HTML coverage report to host
        run: docker cp unit_tests:/module_to_test/htmlcov ./htmlcov

      - name: Stop Docker container
        run: docker stop unit_tests

      - name: Remove Docker container
        run: docker rm unit_tests

      - name: Installing coveralls
        run: pip3 install coveralls

      - name: Upload Coverage to Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: coveralls